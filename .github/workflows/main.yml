name: Build Coccinelle Portable

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: ubuntu:18.04
    
    steps:
    - name: Install and package Coccinelle
      run: |
        # 設置非交互式模式
        export DEBIAN_FRONTEND=noninteractive
        
        # 更新並安裝 Coccinelle
        apt-get update -qq
        apt-get install -y -qq coccinelle tar
        
        # 檢查安裝
        echo "Checking Coccinelle installation..."
        which spatch
        spatch --version
        
        # 創建可攜式包目錄結構
        mkdir -p portable-coccinelle/bin
        mkdir -p portable-coccinelle/lib
        mkdir -p portable-coccinelle/share
        
        # 複製 spatch 執行檔
        cp /usr/bin/spatch portable-coccinelle/bin/
        
        # 複製 OCaml 庫文件
        if [ -d /usr/lib/x86_64-linux-gnu/ocaml ]; then
            cp -r /usr/lib/x86_64-linux-gnu/ocaml portable-coccinelle/lib/
        fi
        
        # 複製 Coccinelle 配置和腳本
        if [ -d /usr/share/coccinelle ]; then
            cp -r /usr/share/coccinelle portable-coccinelle/share/
        fi
        
        # 複製其他可能需要的庫
        if [ -d /usr/lib/ocaml ]; then
            cp -r /usr/lib/ocaml portable-coccinelle/lib/ 2>/dev/null || true
        fi
        
        # 創建啟動腳本
        cat > portable-coccinelle/spatch.sh << 'EOF'
        #!/bin/bash
        # Portable Coccinelle launcher script
        SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
        
        # 設置環境變數
        export LD_LIBRARY_PATH="$SCRIPT_DIR/lib:$SCRIPT_DIR/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
        export OCAML_TOPLEVEL_PATH="$SCRIPT_DIR/lib/ocaml"
        export COCCINELLE_HOME="$SCRIPT_DIR/share/coccinelle"
        
        # 執行 spatch
        "$SCRIPT_DIR/bin/spatch" "$@"
        EOF
        
        # 設置執行權限
        chmod +x portable-coccinelle/spatch.sh
        chmod +x portable-coccinelle/bin/spatch
        
        # 創建 README 文件
        cat > portable-coccinelle/README.md << 'EOF'
        # Portable Coccinelle Package
        
        This is a portable version of Coccinelle (spatch) built for Ubuntu systems.
        
        ## Usage
        
        ### Method 1: Use the launcher script
        ```bash
        ./spatch.sh --version
        ./spatch.sh [your-options] [files]
        ```
        
        ### Method 2: Add to PATH
        ```bash
        export PATH=$PWD:$PATH
        spatch.sh --version
        ```
        
        ### Method 3: Create alias
        ```bash
        alias spatch=$PWD/spatch.sh
        spatch --version
        ```
        
        ## Installation
        
        1. Extract the package:
           ```bash
           tar -xzf coccinelle-portable.tar.gz
           cd portable-coccinelle
           ```
        
        2. Test the installation:
           ```bash
           ./spatch.sh --version
           ```
        
        3. (Optional) Add to your shell profile:
           ```bash
           echo "export PATH=\$PATH:$(pwd)" >> ~/.bashrc
           echo "alias spatch=$(pwd)/spatch.sh" >> ~/.bashrc
           source ~/.bashrc
           ```
        
        ## Package Info
        
        - Coccinelle Version: Built from Ubuntu 18.04 repository
        - Build Date: $(date)
        - Includes: Python support, PCRE support
        - Compatibility: Ubuntu 16.04+ and compatible Linux distributions
        EOF
        
        # 測試可攜式版本
        echo "Testing portable spatch..."
        ./portable-coccinelle/spatch.sh --version
        
        # 顯示包內容
        echo "Package contents:"
        find portable-coccinelle -type f | head -20
        
        # 打包
        tar -czf coccinelle-portable.tar.gz portable-coccinelle/
        
        # 顯示最終信息
        echo "========================================="
        echo "✅ Coccinelle portable package created!"
        echo "📦 Package: coccinelle-portable.tar.gz"
        echo "📏 Size: $(du -h coccinelle-portable.tar.gz | cut -f1)"
        echo "📍 Location: $(pwd)/coccinelle-portable.tar.gz"
        echo "========================================="
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: coccinelle-portable
        path: coccinelle-portable.tar.gz
        retention-days: 30
    
    - name: Display download instructions
      run: |
        echo "🎉 Build completed successfully!"
        echo ""
        echo "📥 To download your package:"
        echo "1. Go to the Actions tab in your GitHub repository"
        echo "2. Click on this workflow run"
        echo "3. Scroll down to the 'Artifacts' section"
        echo "4. Click 'coccinelle-portable' to download"
        echo ""
        echo "📋 Package contents:"
        echo "- spatch.sh (launcher script)"
        echo "- bin/spatch (main executable)"
        echo "- lib/ (OCaml libraries)"
        echo "- share/ (Coccinelle configuration)"
        echo "- README.md (usage instructions)"
