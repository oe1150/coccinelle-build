name: Build Coccinelle for Ubuntu 16.04 (No Node.js)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: ubuntu:16.04
    
    steps:
    - name: Build Coccinelle from deb packages
      run: |
        # 更新包管理器
        apt-get update
        apt-get install -y wget ca-certificates
        
        # 下載必要的 deb 包
        wget http://archive.ubuntu.com/ubuntu/pool/universe/c/coccinelle/coccinelle_1.0.4-2_amd64.deb
        wget http://archive.ubuntu.com/ubuntu/pool/main/o/ocaml/ocaml-base_4.02.3-9ubuntu1_amd64.deb
        wget http://archive.ubuntu.com/ubuntu/pool/main/o/ocaml/ocaml-interp_4.02.3-9ubuntu1_amd64.deb
        
        # 解壓所有 deb 包
        mkdir -p extracted
        for deb in *.deb; do
            dpkg-deb -x "$deb" extracted/
        done
        
        # 創建可攜式包
        mkdir -p portable-coccinelle
        cp -r extracted/usr/* portable-coccinelle/
        
        # 創建啟動腳本
        cat > portable-coccinelle/spatch.sh << 'EOF'
        #!/bin/bash
        SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
        export LD_LIBRARY_PATH="$SCRIPT_DIR/lib:$SCRIPT_DIR/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
        export OCAML_TOPLEVEL_PATH="$SCRIPT_DIR/lib/ocaml"
        "$SCRIPT_DIR/bin/spatch" "$@"
        EOF
        chmod +x portable-coccinelle/spatch.sh
        
        # 測試執行
        echo "Testing spatch..."
        ./portable-coccinelle/spatch.sh --version || echo "Version check failed, but binary exists"
        
        # 打包
        tar -czf coccinelle-ubuntu16-portable.tar.gz portable-coccinelle/
        
        # 顯示信息
        echo "Build completed!"
        echo "Artifact size:"
        ls -lh coccinelle-ubuntu16-portable.tar.gz
        echo "Package contents:"
        tar -tzf coccinelle-ubuntu16-portable.tar.gz | head -10
        
        # 將文件移到 GitHub 可以訪問的位置
        mkdir -p /github/workspace 2>/dev/null || true
        cp coccinelle-ubuntu16-portable.tar.gz /github/workspace/ 2>/dev/null || echo "Cannot copy to workspace, manual download needed"
        
        # 也放在根目錄
        cp coccinelle-ubuntu16-portable.tar.gz / 2>/dev/null || true
        
        echo "=== Build Summary ==="
        echo "File location: $(pwd)/coccinelle-ubuntu16-portable.tar.gz"
        echo "File size: $(du -h coccinelle-ubuntu16-portable.tar.gz | cut -f1)"
        echo "Build completed successfully!"
