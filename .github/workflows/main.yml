name: Build Coccinelle for Ubuntu 16.04 (DEB Method)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: ubuntu:16.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install basic tools
      run: |
        apt-get update
        apt-get install -y wget ca-certificates
    
    - name: Download and extract deb packages
      run: |
        # 下載必要的 deb 包
        wget http://archive.ubuntu.com/ubuntu/pool/universe/c/coccinelle/coccinelle_1.0.4-2_amd64.deb
        wget http://archive.ubuntu.com/ubuntu/pool/main/o/ocaml/ocaml-base_4.02.3-9ubuntu1_amd64.deb
        wget http://archive.ubuntu.com/ubuntu/pool/main/o/ocaml/ocaml-interp_4.02.3-9ubuntu1_amd64.deb
        
        # 解壓所有 deb 包
        mkdir -p extracted
        for deb in *.deb; do
            dpkg-deb -x "$deb" extracted/
        done
    
    - name: Create portable package
      run: |
        mkdir -p portable-coccinelle
        cp -r extracted/usr/* portable-coccinelle/
        
        # 創建啟動腳本
        cat > portable-coccinelle/spatch.sh << 'EOF'
        #!/bin/bash
        SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
        export LD_LIBRARY_PATH="$SCRIPT_DIR/lib:$SCRIPT_DIR/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
        export OCAML_TOPLEVEL_PATH="$SCRIPT_DIR/lib/ocaml"
        "$SCRIPT_DIR/bin/spatch" "$@"
        EOF
        chmod +x portable-coccinelle/spatch.sh
        
        # 打包
        tar -czf coccinelle-ubuntu16-portable.tar.gz portable-coccinelle/
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: coccinelle-ubuntu16-portable
        path: coccinelle-ubuntu16-portable.tar.gz
        retention-days: 30
    
    - name: Display build info
      run: |
        echo "Build completed successfully!"
        echo "Artifact size:"
        ls -lh coccinelle-ubuntu16-portable.tar.gz
